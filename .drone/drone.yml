---
kind: pipeline
name: Lint
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - apt-get update -y && apt-get install -y libsystemd-dev
  - make lint
  image: grafana/agent-build-image:0.40.2
  name: Lint
trigger:
  event:
  - pull_request
type: docker
---
kind: pipeline
name: Test
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - make GO_TAGS="nodocker" test
  image: grafana/agent-build-image:0.40.2
  name: Run Go tests
trigger:
  event:
  - pull_request
type: docker
---
kind: pipeline
name: Test (Full)
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - K8S_USE_DOCKER_NETWORK=1 make test
  image: grafana/agent-build-image:0.40.2
  name: Run Go tests
  volumes:
  - name: docker
    path: /var/run/docker.sock
trigger:
  ref:
  - refs/heads/main
type: docker
volumes:
- host:
    path: /var/run/docker.sock
  name: docker
---
kind: pipeline
name: Test (Windows)
platform:
  arch: amd64
  os: windows
  version: "1809"
steps:
- commands:
  - go test -tags="nodocker,nonetwork" ./...
  image: grafana/agent-build-image:0.40.2-windows
  name: Run Go tests
trigger:
  ref:
  - refs/heads/main
type: docker
---
kind: pipeline
name: Check Linux container (grafana/alloy)
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - make alloy-image
  image: grafana/agent-build-image:0.40.2
  name: Build container
  volumes:
  - name: docker
    path: /var/run/docker.sock
trigger:
  paths:
  - cmd/alloy/Dockerfile
  - tools/ci/docker-containers
  ref:
  - refs/heads/main
type: docker
volumes:
- host:
    path: /var/run/docker.sock
  name: docker
---
kind: pipeline
name: Check Windows container (grafana/alloy)
platform:
  arch: amd64
  os: windows
  version: "1809"
steps:
- commands:
  - '& "C:/Program Files/git/bin/bash.exe" ./tools/ci/docker-containers-windows alloy'
  image: grafana/agent-build-image:0.40.2-windows
  name: Build container
  volumes:
  - name: docker
    path: //./pipe/docker_engine/
trigger:
  paths:
  - cmd/alloy/Dockerfile.windows
  - tools/ci/docker-containers-windows
  ref:
  - refs/heads/main
type: docker
volumes:
- host:
    path: //./pipe/docker_engine/
  name: docker
---
kind: pipeline
name: Build alloy (Linux amd64)
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - make generate-ui
  - GO_TAGS="builtinassets promtail_journal_enabled" GOOS=linux GOARCH=amd64 GOARM=
    make alloy
  image: grafana/agent-build-image:0.40.2
  name: Build
trigger:
  event:
  - pull_request
type: docker
---
kind: pipeline
name: Build alloy (Linux arm64)
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - make generate-ui
  - GO_TAGS="builtinassets promtail_journal_enabled" GOOS=linux GOARCH=arm64 GOARM=
    make alloy
  image: grafana/agent-build-image:0.40.2
  name: Build
trigger:
  event:
  - pull_request
type: docker
---
kind: pipeline
name: Build alloy (Linux ppc64le)
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - make generate-ui
  - GO_TAGS="builtinassets promtail_journal_enabled" GOOS=linux GOARCH=ppc64le GOARM=
    make alloy
  image: grafana/agent-build-image:0.40.2
  name: Build
trigger:
  event:
  - pull_request
type: docker
---
kind: pipeline
name: Build alloy (Linux s390x)
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - make generate-ui
  - GO_TAGS="builtinassets promtail_journal_enabled" GOOS=linux GOARCH=s390x GOARM=
    make alloy
  image: grafana/agent-build-image:0.40.2
  name: Build
trigger:
  event:
  - pull_request
type: docker
---
kind: pipeline
name: Build alloy (macOS Intel)
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - make generate-ui
  - GO_TAGS="builtinassets" GOOS=darwin GOARCH=amd64 GOARM= make alloy
  image: grafana/agent-build-image:0.40.2
  name: Build
trigger:
  event:
  - pull_request
type: docker
---
kind: pipeline
name: Build alloy (macOS Apple Silicon)
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - make generate-ui
  - GO_TAGS="builtinassets" GOOS=darwin GOARCH=arm64 GOARM= make alloy
  image: grafana/agent-build-image:0.40.2
  name: Build
trigger:
  event:
  - pull_request
type: docker
---
kind: pipeline
name: Build alloy (Windows amd64)
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - make generate-ui
  - GO_TAGS="builtinassets" GOOS=windows GOARCH=amd64 GOARM= make alloy
  image: grafana/agent-build-image:0.40.2
  name: Build
trigger:
  event:
  - pull_request
type: docker
---
kind: pipeline
name: Build alloy (FreeBSD amd64)
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - make generate-ui
  - GO_TAGS="builtinassets" GOOS=freebsd GOARCH=amd64 GOARM= make alloy
  image: grafana/agent-build-image:0.40.2
  name: Build
trigger:
  event:
  - pull_request
type: docker
---
kind: pipeline
name: Publish development Linux alloy container
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
  failure: ignore
  image: grafana/agent-build-image:0.40.2
  name: Configure QEMU
  volumes:
  - name: docker
    path: /var/run/docker.sock
- commands:
  - mkdir -p $HOME/.docker
  - printenv GCR_CREDS > $HOME/.docker/config.json
  - docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD
  - docker buildx create --name multiarch-alloy-alloy-${DRONE_COMMIT_SHA} --driver
    docker-container --use
  - DEVELOPMENT=1 ./tools/ci/docker-containers alloy
  - docker buildx rm multiarch-alloy-alloy-${DRONE_COMMIT_SHA}
  environment:
    DOCKER_LOGIN:
      from_secret: docker_login
    DOCKER_PASSWORD:
      from_secret: docker_password
    GCR_CREDS:
      from_secret: gcr_admin
  image: grafana/agent-build-image:0.40.2
  name: Publish container
  volumes:
  - name: docker
    path: /var/run/docker.sock
trigger:
  ref:
  - refs/heads/main
type: docker
volumes:
- host:
    path: /var/run/docker.sock
  name: docker
---
kind: pipeline
name: Test Linux system packages
platform:
  arch: amd64
  os: linux
steps:
- commands:
  - DOCKER_OPTS="" make dist/alloy-linux-amd64
  - DOCKER_OPTS="" make test-packages
  image: grafana/agent-build-image:0.40.2
  name: Test Linux system packages
  volumes:
  - name: docker
    path: /var/run/docker.sock
trigger:
  paths:
  - packaging/**
  - Makefile
  ref:
  - refs/heads/main
type: docker
volumes:
- host:
    path: /var/run/docker.sock
  name: docker
---
get:
  name: app-id
  path: infra/data/ci/agent/githubapp
kind: secret
name: app_id
---
get:
  name: app-installation-id
  path: infra/data/ci/agent/githubapp
kind: secret
name: app_installation_id
---
get:
  name: username
  path: infra/data/ci/docker_hub
kind: secret
name: docker_login
---
get:
  name: password
  path: infra/data/ci/docker_hub
kind: secret
name: docker_password
---
get:
  name: .dockerconfigjson
  path: secret/data/common/gcr
kind: secret
name: dockerconfigjson
---
get:
  name: .dockerconfigjson
  path: infra/data/ci/gcr-admin
kind: secret
name: gcr_admin
---
get:
  name: passphrase
  path: infra/data/ci/packages-publish/gpg
kind: secret
name: gpg_passphrase
---
get:
  name: private-key
  path: infra/data/ci/packages-publish/gpg
kind: secret
name: gpg_private_key
---
get:
  name: public-key
  path: infra/data/ci/packages-publish/gpg
kind: secret
name: gpg_public_key
---
get:
  name: private-key
  path: infra/data/ci/agent/githubapp
kind: secret
name: private_key
---
get:
  name: app-id
  path: infra/data/ci/github/updater-app
kind: secret
name: updater_app_id
---
get:
  name: app-installation-id
  path: infra/data/ci/github/updater-app
kind: secret
name: updater_app_installation_id
---
get:
  name: private-key
  path: infra/data/ci/github/updater-app
kind: secret
name: updater_private_key
---
kind: signature
hmac: ba4497becf94a0f6f8dead2d99f8636683fbfba81eb869723c0a71ce4f7dcc09

...
