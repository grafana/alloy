name: Shared container publish workflow

on:
  workflow_call:
    inputs:
      img-name:
        required: true
        type: string
      push:
        required: false
        type: boolean
        default: true

permissions:
  contents: read
  id-token: write

jobs:
  publish_windows_container:
    name: Publish Windows alloy container
    strategy:
      matrix:
        os: [windows-2022, windows-2019]
    runs-on: ${{ matrix.os }}
    steps:
      # This step needs to run before "Checkout code".
      # That's because it generates a new file.
      # We don't want this file to end up in the repo directory.
      # Then "tools/image-tag" would get confused because "git status" no longer reports a clean repo.
    - name: Login to DockerHub (from vault)
      uses: grafana/shared-workflows/actions/dockerhub-login@13fb504e3bfe323c1188bf244970d94b2d336e86 # dockerhub-login-v1.0.1

    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Set up Go
      uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
      with:
        go-version-file: go.mod
        cache: false

    - name: Get Go version from go.mod
      id: get_go_version
      # Use only the major and minor versions.
      # Don't use the patch number, because those docker images sometimes get deleted.
      run: |
        $go_version = go mod edit -json | ConvertFrom-Json | select -exp Go
        $go_version_split = $go_version.ToString().split(".")
        $go_short_version = $go_version_split[0] + "." + $go_version_split[1]
        "alloy_go_version=$go_short_version" >> $env:GITHUB_OUTPUT

    - name: Build and publish the container
      # TODO: Run "make alloy-image-windows" instead?
      run: |
       & "C:/Program Files/git/bin/bash.exe" -c 'PUSH_ALLOY_IMAGE=${{inputs.push}} WINDOWS_VERSION=${{matrix.os}} ALLOY_GO_VERSION=${{steps.get_go_version.outputs.alloy_go_version}} ./tools/ci/docker-containers-windows ${{ inputs.img-name }}'
