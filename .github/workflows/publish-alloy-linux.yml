name: Shared Linux container publish workflow

on:
  workflow_call:
    inputs:
      img-name:
        required: true
        type: string
      push:
        required: false
        type: boolean
        default: true
      dev:
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  id-token: write

jobs:
  publish_linux_container:
    name: Publish Alloy Linux container
    container: grafana/alloy-build-image:v0.1.19
    runs-on:
      labels: github-hosted-ubuntu-x64-large
    permissions:
      contents: read
      id-token: write
    steps:
      # This step needs to run before "Checkout code".
      # That's because it generates a new file.
      # We don't want this file to end up in the repo directory.
      # Then "tools/image-tag" would get confused because "git status" no longer reports a clean repo.
    - name: Login to DockerHub (from vault)
      uses: grafana/shared-workflows/actions/dockerhub-login@13fb504e3bfe323c1188bf244970d94b2d336e86 # dockerhub-login-v1.0.1

    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false

    - name: Tag dev
      if: ${{ inputs.dev }}
      run: |
        ./tools/tag-dev

    - name: Set ownership
      # https://github.com/actions/runner/issues/2033#issuecomment-1204205989
      run: |
          # this is to fix GIT not liking owner of the checkout dir
          chown -R $(id -u):$(id -g) $PWD

    - name: Set up Go
      uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
      with:
        go-version-file: go.mod
        cache: false

    - run: |
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        docker buildx create --name multiarch-alloy-${IMG_NAME}-${GITHUB_SHA} --driver docker-container --use
        ./tools/ci/docker-containers ${IMG_NAME}
        docker buildx rm multiarch-alloy-${IMG_NAME}-${GITHUB_SHA}
      env:
        PUSH_ALLOY_IMAGE: ${{ inputs.push }}
        IMG_NAME: ${{ inputs.img-name }}
