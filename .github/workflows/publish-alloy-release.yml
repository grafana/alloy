name: Publish alloy release containers
on:
  # TODO Remove once tested
  pull_request:
    branches: [main]
  #push:
  #  tags:
  #    - v*

permissions:
  contents: read

jobs:
  # TODO Restore once tested
  #publish_linux_container:
  #  uses: ./.github/workflows/publish-alloy-linux.yml
  #  permissions:
  #    contents: read
  #    id-token: write
  #  with:
  #    img-name: alloy
  
  #publish_linux_boringcrypto_container:
  #  uses: ./.github/workflows/publish-alloy-linux.yml
  #  permissions:
  #    contents: read
  #    id-token: write
  #  with:
  #    img-name: alloy-boringcrypto

  #publish_windows_container:
  #  uses: ./.github/workflows/publish-alloy-windows.yml
  #  permissions:
  #    contents: read
  #    id-token: write
  #  with:
  #    img-name: alloy

  build_alloy:
    name: Build Alloy
    container: grafana/alloy-build-image:v0.1.21@sha256:36b1e621f32f46aa1de58843b885f0885faabe7b29468462d36a60bea1245e33
    runs-on:
      labels: github-hosted-ubuntu-x64-large
    # TODO Restore once tested
    #needs:
    #- publish_linux_container
    #- publish_linux_boringcrypto_container
    #- publish_windows_container
    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false

    - name: Set ownership
      # https://github.com/actions/runner/issues/2033#issuecomment-1204205989
      run: |
          # This is to fix Git not liking owner of the checkout directory
          chown -R $(id -u):$(id -g) $PWD

    - name: Set up Go
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
      with:
        go-version-file: go.mod
        cache: false

    - name: Build
      run: |
        RELEASE_BUILD=1 make -j4 dist
      env:
        # TODO Use GITHUB_REF_NAME once tested
        #VERSION: ${{ env.GITHUB_REF_NAME }}
        VERSION: 'v1.999.999'

    - name: Publish signing script for Windows
      # TODO Enable condition once tested as working
      #if: github.ref_type == 'tag'
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: windows-signing-script
        path: ./tools/signing/authenticode.ps1
        if-no-files-found: error

    - name: Publish dist
      # TODO Enable condition once tested as working
      #if: github.ref_type == 'tag'
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: dist
        path: ./dist
        if-no-files-found: error

    - name: Publish unsigned Windows executable
      # TODO Enable condition once tested as working
      #if: github.ref_type == 'tag'
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: windows-executable-unsigned
        path: ./dist/alloy-windows-amd64.exe
        if-no-files-found: error

    - name: Publish unsigned Windows service executable
      # TODO Enable condition once tested as working
      #if: github.ref_type == 'tag'
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: windows-service-unsigned
        path: ./dist.temp/alloy-service-windows-amd64.exe
        if-no-files-found: error

  sign_alloy_windows:
    name: Sign Alloy executables for Windows
    # TODO Enable condition once tested as working
    #if: github.ref_type == 'tag'
    runs-on: windows-2025
    env:
      TRUSTED_SIGNING_ACCOUNT: 'grafana-premium-eastus'
      TRUSTED_SIGNING_ENDPOINT: 'https://eus.codesigning.azure.net/'
      TRUSTED_SIGNING_PROFILE: 'grafana-production'
    environment:
      name: azure-trusted-signing
    needs:
    - build_alloy
    permissions:
      # This job needs OIDC to be able to sign the Windows executables
      contents: read
      id-token: write
    steps:
    - name: Download unsigned Windows executable
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: windows-executable-unsigned
        path: dist

    - name: Download unsigned Windows service executable
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: windows-service-unsigned
        path: dist.temp

    - name: Download signing script for Windows
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: windows-signing-script
        path: scripts

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
      with:
        # renovate: datasource=dotnet-version depName=dotnet-sdk
        dotnet-version: '8.0.413'

    - name: Install Sign CLI tool
      env:
        # renovate: datasource=nuget depName=sign
        DOTNET_SIGN_VERSION: '0.9.1-beta.25379.1'
      run: dotnet tool install --tool-path . sign --version ${env:DOTNET_SIGN_VERSION}

    - uses: grafana/shared-workflows/actions/get-vault-secrets@a37de51f3d713a30a9e4b21bcdfbd38170020593 # get-vault-secrets/v1.3.0
      id: get-signing-secrets
      with:
        export_env: false
        repo_secrets: |
          client-id=azure-trusted-signing:client-id
          subscription-id=azure-trusted-signing:subscription-id
          tenant-id=azure-trusted-signing:tenant-id

    - name: Azure log in
      uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2.3.0
      with:
        client-id: ${{ fromJSON(steps.get-signing-secrets.outputs.secrets).client-id }}
        subscription-id: ${{ fromJSON(steps.get-signing-secrets.outputs.secrets).subscription-id }}
        tenant-id: ${{ fromJSON(steps.get-signing-secrets.outputs.secrets).tenant-id }}

    - name: Sign Alloy executable
      shell: pwsh
      run: |
        ./scripts/authenticode.ps1 -FileToSign ./dist/alloy-windows-amd64.exe
        if ($LASTEXITCODE -ne 0) {
          Write-Output "::error::Failed to Authenticode sign Alloy executable"
          exit 1
        }

    - name: Sign Alloy service executable
      shell: pwsh
      run: |
        ./tools/signing/authenticode.ps1 -FileToSign ./dist.temp/alloy-service-windows-amd64.exe
        if ($LASTEXITCODE -ne 0) {
          Write-Output "::error::Failed to Authenticode sign Alloy service executable"
          exit 1
        }

    - name: Publish signed Windows executable
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: windows-executable-signed
        path: ./dist/alloy-windows-amd64.exe
        if-no-files-found: error

    - name: Publish signed Windows service executable
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: windows-service-signed
        path: ./dist.temp/alloy-service-windows-amd64.exe
        if-no-files-found: error

  build_alloy_windows_installer:
    name: Build Alloy Windows installer with signed executables
    container: grafana/alloy-build-image:v0.1.21@sha256:36b1e621f32f46aa1de58843b885f0885faabe7b29468462d36a60bea1245e33
    runs-on:
      labels: github-hosted-ubuntu-x64-large
    needs:
    - sign_alloy_windows
    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false

    - name: Set ownership
      # https://github.com/actions/runner/issues/2033#issuecomment-1204205989
      run: |
          # This is to fix Git not liking owner of the checkout directory
          chown -R $(id -u):$(id -g) $PWD

    - name: Set up Go
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
      with:
        go-version-file: go.mod
        cache: false

    - name: Download signed Windows executable
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: windows-executable-signed
        path: dist

    - name: Download signed Windows service executable
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: windows-service-signed
        path: dist.temp

    - name: Build unsigned Windows installer containing signed files
      run: |
        RELEASE_BUILD=1 make -j4 dist-alloy-installer-windows
      env:
        # TODO Use GITHUB_REF_NAME once tested
        #VERSION: ${{ env.GITHUB_REF_NAME }}
        VERSION: 'v1.999.999'

    - name: Publish unsigned Windows installer
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: windows-installer-unsigned
        path: ./dist/alloy-installer-windows-amd64.exe
        if-no-files-found: error

  sign_alloy_windows_installer:
    name: Sign Alloy installer for Windows
    runs-on: windows-2025
    env:
      TRUSTED_SIGNING_ACCOUNT: 'grafana-premium-eastus'
      TRUSTED_SIGNING_ENDPOINT: 'https://eus.codesigning.azure.net/'
      TRUSTED_SIGNING_PROFILE: 'grafana-production'
    environment:
      name: azure-trusted-signing
    needs:
    - build_alloy_windows_installer
    permissions:
      # This job needs OIDC to be able to sign the Windows installer
      contents: read
      id-token: write
    steps:
    - name: Download unsigned Windows installer
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: windows-installer-unsigned
        path: dist

    - name: Download signing script for Windows
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: windows-signing-script
        path: scripts

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
      with:
        # renovate: datasource=dotnet-version depName=dotnet-sdk
        dotnet-version: '8.0.413'

    - name: Install Sign CLI tool
      env:
        # renovate: datasource=nuget depName=sign
        DOTNET_SIGN_VERSION: '0.9.1-beta.25379.1'
      run: dotnet tool install --tool-path . sign --version ${env:DOTNET_SIGN_VERSION}

    - uses: grafana/shared-workflows/actions/get-vault-secrets@a37de51f3d713a30a9e4b21bcdfbd38170020593 # get-vault-secrets/v1.3.0
      id: get-signing-secrets
      with:
        export_env: false
        repo_secrets: |
          client-id=azure-trusted-signing:client-id
          subscription-id=azure-trusted-signing:subscription-id
          tenant-id=azure-trusted-signing:tenant-id

    - name: Azure log in
      uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2.3.0
      with:
        client-id: ${{ fromJSON(steps.get-signing-secrets.outputs.secrets).client-id }}
        subscription-id: ${{ fromJSON(steps.get-signing-secrets.outputs.secrets).subscription-id }}
        tenant-id: ${{ fromJSON(steps.get-signing-secrets.outputs.secrets).tenant-id }}

    - name: Sign Alloy installer for Windows
      shell: pwsh
      run: |
        ./scripts/authenticode.ps1 -FileToSign ./dist/alloy-installer-windows-amd64.exe
        if ($LASTEXITCODE -ne 0) {
          Write-Output "::error::Failed to Authenticode sign Alloy Windows installer"
          exit 1
        }

    - name: Publish signed Windows installer
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: windows-installer-signed
        path: ./dist/alloy-installer-windows-amd64.exe
        if-no-files-found: error

  publish_github_release:
    name: Publish GitHub release
    if: github.ref_type == 'tag'
    container: grafana/alloy-build-image:v0.1.21@sha256:36b1e621f32f46aa1de58843b885f0885faabe7b29468462d36a60bea1245e33
    runs-on:
      labels: github-hosted-ubuntu-x64-large
    needs:
    - sign_alloy_windows_installer
    permissions:
      # This job needs write access so it can create a draft GitHub release.
      contents: write
      id-token: write
    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false

    - name: Set ownership
      # https://github.com/actions/runner/issues/2033#issuecomment-1204205989
      run: |
          # This is to fix Git not liking owner of the checkout directory
          chown -R $(id -u):$(id -g) $PWD

    - name: Set up Go
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
      with:
        go-version-file: go.mod
        cache: false

    - name: Download dist
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: dist
        path: dist

    # Overwrite the original Windows Alloy executable with the signed version
    - name: Download signed Windows executable
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: windows-executable-signed
        path: dist

    # Overwrite the original Windows Alloy installer with the signed version
    - name: Download signed Windows installer
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
      with:
        name: windows-installer-signed
        path: dist

    - name: Publish
      run: |
        VERSION="${GITHUB_REF_NAME}" RELEASE_DOC_TAG=$(echo "${GITHUB_REF_NAME}" | awk -F '.' '{print $1"."$2}') ./tools/release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
