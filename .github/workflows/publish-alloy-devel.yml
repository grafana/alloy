name: Publish alloy-devel container
on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  publish_windows_container:
    uses: ./.github/workflows/publish-alloy.yml
    with:
      img-name: alloy-devel

  publish_linux_container:
    name: Publish Linux alloy-devel container
    container: grafana/alloy-build-image:v0.1.17
    runs-on:
      labels: github-hosted-ubuntu-x64-large
    steps:
      # This step needs to run before "Checkout code".
      # That's because it generates a new file.
      # We don't want this file to end up in the repo directory.
      # Then "tools/image-tag" would get confused because "git status" no longer reports a clean repo.
    - name: Login to DockerHub (from vault)
      uses: grafana/shared-workflows/actions/dockerhub-login@13fb504e3bfe323c1188bf244970d94b2d336e86 # dockerhub-login-v1.0.1

    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false

    - name: Set ownership
      # https://github.com/actions/runner/issues/2033#issuecomment-1204205989
      run: |
          # this is to fix GIT not liking owner of the checkout dir
          chown -R $(id -u):$(id -g) $PWD

    - name: Set up Go
      uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
      with:
        go-version-file: go.mod
        cache: false

    - run: |
        docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        docker buildx create --name multiarch-alloy-alloy-devel-${GITHUB_SHA} --driver docker-container --use
        ./tools/ci/docker-containers alloy-devel
        docker buildx rm multiarch-alloy-alloy-devel-${GITHUB_SHA}

  publish_linux_boringcrypto_container:
    name: Publish Linux alloy-devel-boringcrypto container
    container: grafana/alloy-build-image:v0.1.17
    runs-on:
      labels: github-hosted-ubuntu-x64-large
    steps:
    # This step needs to run before "Checkout code".
    # That's because it generates a new file.
    # We don't want this file to end up in the repo directory.
    # Then "tools/image-tag" would get confused because "git status" no longer reports a clean repo.
    - name: Login to DockerHub (from vault)
      uses: grafana/shared-workflows/actions/dockerhub-login@13fb504e3bfe323c1188bf244970d94b2d336e86 # dockerhub-login-v1.0.1

    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false

    - name: Set ownership
      # https://github.com/actions/runner/issues/2033#issuecomment-1204205989
      run: |
          # this is to fix GIT not liking owner of the checkout dir
          chown -R $(id -u):$(id -g) $PWD

    - name: Set up Go
      uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
      with:
        go-version-file: go.mod
        cache: false

    - run: |
       docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
       docker buildx create --name multiarch-alloy-alloy-devel-boringcrypto-${GITHUB_SHA} --driver docker-container --use
       ./tools/ci/docker-containers alloy-devel-boringcrypto
       docker buildx rm multiarch-alloy-alloy-devel-boringcrypto-${GITHUB_SHA}

  update_deployment_tools:
    name: Update deployment_tools
    runs-on: ubuntu-latest
    needs:
    - publish_linux_container
    - publish_linux_boringcrypto_container
    steps:

    - name: Get Vault secrets
      uses: grafana/shared-workflows/actions/get-vault-secrets@28361cdb22223e5f1e34358c86c20908e7248760 # get-vault-secrets-v1.1.0
      with:
        common_secrets: |
          GITHUB_APP_ID=updater-app:app-id
          GITHUB_APP_INSTALLATION_ID=updater-app:app-installation-id
          GITHUB_APP_PRIVATE_KEY=updater-app:private-key

    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false

    - name: Get the image tag
      run: |
        echo "$(bash ./tools/image-tag-docker)" > .tag-only
        echo "grafana/alloy-dev:$(bash ./tools/image-tag-docker)" > .image-tag

      # This step needs to run after "Get the image tag".
      # That's because the login to GAR generates a new file.
      # We don't want this file to end up in the repo directory.
      # Then "tools/image-tag" would get confused because "git status" no longer reports a clean repo.
    - name: Log in to Google Artifact Registry
      uses: grafana/shared-workflows/actions/login-to-gar@ebcac324fecb38bbeb7a2e59c82da34010c14014 # login-to-gar-v0.2.2
      with:
        registry: "us-docker.pkg.dev"
        environment: "prod"

    - name: Update to latest image
      run: |
        set -e -o pipefail

        echo "The image tag is: $(cat .image-tag)"

        cat << EOF > config.json
        {
          "git_committer_name": "updater-for-ci[bot]",
          "git_author_name": "updater-for-ci[bot]",
          "git_committer_email": "119986603+updater-for-ci[bot]@users.noreply.github.com",
          "git_author_email": "119986603+updater-for-ci[bot]@users.noreply.github.com",
          "destination_branch": "master",
          "repo_name": "deployment_tools",
          "update_jsonnet_attribute_configs": [
            {
              "file_path": "ksonnet/lib/alloy/waves/alloy.libsonnet",
              "jsonnet_key": "dev_canary",
              "jsonnet_value_file": ".image-tag"
            }
          ]
        }
        EOF

        docker run --rm \
          -e GITHUB_APP_ID \
          -e GITHUB_APP_INSTALLATION_ID \
          -e GITHUB_APP_PRIVATE_KEY \
          -e CONFIG_JSON="$(cat config.json)" \
          -v ./.image-tag:/app/.image-tag \
          us-docker.pkg.dev/grafanalabs-global/docker-deployment-tools-prod/updater |& tee updater-output.log
