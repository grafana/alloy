package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.75

import (
	"context"

	"github.com/grafana/alloy/internal/component"
	"github.com/grafana/alloy/internal/service/graphql/graph/model"
)

// Components is the resolver for the components field.
func (r *queryResolver) Components(ctx context.Context) ([]*model.Component, error) {
	components, err := r.Host.ListComponents("", component.InfoOptions{
		GetHealth: true,
	})
	if err != nil {
		return nil, err
	}

	result := make([]*model.Component, len(components))
	for i, comp := range components {
		result[i] = &model.Component{
			ID:          comp.ID.String(),
			Name:        comp.ComponentName,
			Description: comp.ComponentName, // Using component name as description for now
		}
	}

	return result, nil
}
