package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.75

import (
	"context"
	"fmt"

	"github.com/grafana/alloy/internal/service/graphql/graph/model"
)

// Endpoints is the resolver for the endpoints field.
func (r *queryResolver) Endpoints(ctx context.Context) ([]model.Endpoint, error) {
	return nil, fmt.Errorf("Not yet implemented")
}

// Endpoint is the resolver for the endpoint field.
func (r *queryResolver) Endpoint(ctx context.Context, host string, port int32) (model.Endpoint, error) {
	// Check if host is empty
	if host == "" {
		return model.Endpoint{}, fmt.Errorf("Endpoint host must be non-empty")
	}

	// Check if port is valid
	if port <= 0 || port > 65535 {
		return model.Endpoint{}, fmt.Errorf("Endpoint port must be 0 <= N < 65535")
	}

	return model.NewEndpoint(host, port), nil
}
