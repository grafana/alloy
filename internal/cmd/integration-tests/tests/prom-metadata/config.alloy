logging {
    level = "debug"
}

livedebugging {}

prometheus.scrape "prom_metadata_writequeue" {
  targets = [
    {"__address__" = "prom-gen:9001"},
  ]
  params = { "metric-prefix" = ["prom_metadata_writequeue_"] }
  forward_to = [
    prometheus.write.queue.prom_metadata.receiver,
  ]
  scrape_classic_histograms = true
  scrape_native_histograms = true
  scrape_interval = "1s"
  scrape_timeout = "500ms"
  // Required for metadata support
  honor_metadata = true
}

prometheus.write.queue "prom_metadata" {
    endpoint "mimir" {
        url = "http://mimir:9009/api/v1/push"
        flush_interval = "1s"
        batch_count = 10
        external_labels = {
            test_name = "prom_metadata_writequeue",
        }
    }
}

prometheus.scrape "prom_metadata_otlp" {
  targets = [
    {"__address__" = "prom-gen:9001"},
  ]
  params = { "metric-prefix" = ["prom_metadata_otlp_"] }
  forward_to = [
    otelcol.receiver.prometheus.prom_metadata.receiver,
  ]
  scrape_classic_histograms = true
  scrape_native_histograms = true
  scrape_interval = "1s"
  scrape_timeout = "500ms"
  // Required for metadata support
  honor_metadata = true
}

otelcol.receiver.prometheus "prom_metadata" {
  output {
    metrics = [otelcol.processor.attributes.prom_metadata.input]
  }
}

otelcol.processor.attributes "prom_metadata" {
  action {
    key = "test_name"
    value = "prom_metadata_otlp"
    action = "insert"
  }

  output {
    metrics = [otelcol.exporter.otlphttp.prom_metadata.input, otelcol.exporter.debug.default.input]
  }
}

otelcol.exporter.otlphttp "prom_metadata" {
  client {
    endpoint = "http://mimir:9009/otlp"
    tls {
      insecure             = true
      insecure_skip_verify = true
    }
  }
}

otelcol.exporter.debug "default" {
  sampling_initial = 10000
  sampling_thereafter = 100
  verbosity = "detailed"
}
