logging {
    level = "debug"
}

livedebugging {}

prometheus.scrape "scrape_prom_metrics" {
  targets = [
    {"__address__" = "prom-gen:9001"},
  ]
  forward_to = [
    prometheus.write.queue.scrape_prom_metrics.receiver,
    prometheus.remote_write.scrape_prom_metrics.receiver,
    otelcol.receiver.prometheus.scrape_prom_metrics_to_otlp.receiver,
  ]
  scrape_classic_histograms = true
  scrape_native_histograms = true
  scrape_interval = "1s"
  scrape_timeout = "500ms"
}

prometheus.write.queue "scrape_prom_metrics" {
    endpoint "mimir" {
        url = "http://mimir:9009/api/v1/push"
        flush_interval = "1s"
        batch_count = 10
        external_labels = {
            test_name = "scrape_prom_metrics_writequeue",
        }
    }
}

prometheus.remote_write "scrape_prom_metrics" {
    external_labels = {
      test_name = "scrape_prom_metrics_remote_write",
    }
	endpoint {
		url = "http://mimir:9009/api/v1/push"
	}
}

otelcol.receiver.prometheus "scrape_prom_metrics_to_otlp" {
  output {
    metrics = [otelcol.processor.attributes.scrape_prom_metrics_to_otlp.input]
  }
}

otelcol.processor.attributes "scrape_prom_metrics_to_otlp" {
  action {
    key = "test_name"
    value = "scrape_prom_metrics_to_otlp"
    action = "insert"
  }

  output {
    metrics = [otelcol.exporter.otlphttp.scrape_prom_metrics_to_otlp.input]
  }
}

otelcol.exporter.otlphttp "scrape_prom_metrics_to_otlp" {
  client {
    endpoint = "http://mimir:9009/otlp"
    tls {
      insecure             = true
      insecure_skip_verify = true
    }
  }
}